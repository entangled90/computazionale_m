#!/usr/bin/python

import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit
import math
import sys
import glob
from operator import itemgetter
import os


def fit_fun(x,*p):
	return p[0]*(np.exp(x*p[1]))

np.seterr(all='warn')
BetaC = 0.4406868
BetaMin = 0.3
filename = str(sys.argv[1])
n_slice = int(sys.argv[2])
betas,taus = np.loadtxt(filename,dtype='float64',unpack=True)

beta=[]
tau=[]
error = []
for i in range(int(len(taus)/n_slice)):
	beta.append(betas[i*n_slice])
	tau.append(np.mean(taus[i*n_slice:(i+1)*n_slice]))
	error.append(np.std(taus[i*n_slice:(i+1)*n_slice])/math.sqrt(n_slice))

out_file = open('tau_en_sommato.dat',"w")
for i in range(len(beta)):
	out_file.write('%.14e\t%.14e\t%.14e\n'%(beta[i],tau[i],error[i]))
out_file.close()


beta_np = np.asarray(beta,dtype='float64')
tau_np =  np.asarray(tau,dtype='float64')
beta_np = (beta_np + (- 0.4406868))/beta_np
x = np.linspace(BetaMin,np.amax(beta_np),100)
fig = plt.figure()
ax = fig.add_subplot(111)
ax.grid(True)
#parameter_plot = [popt[0],popt[1],0]
#Mette le griglie su asse x
#plt.xticks([i for i in range(0,lungh)])
plt.xlabel(r'$\beta$',fontsize='15')
plt.ylabel(r'$\tau_{corr}$',fontsize='15')
#ax.text(BetaMin+0.05,20,r'Funzione di fit: $C(t) = A \tau^{-\nu}$' '\n' r'$\nu=%lf \pm %lf$' '\n' r'$\; \beta_c=%lf\pm %lf$'%(-1/popt[1],ExpErr,popt[2],BetaErr) , bbox={'facecolor':'green', 'alpha':0.5, 'pad':10})
ax.errorbar(beta_np, tau_np ,yerr=error,fmt='o',label='original data')
#ax.plot(x,fit_fun_corr(x,*popt),label ='fitted curve')
plt.legend(loc='upper left')
plt.show()
